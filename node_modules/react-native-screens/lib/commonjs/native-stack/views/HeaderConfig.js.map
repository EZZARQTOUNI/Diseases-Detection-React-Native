{"version":3,"sources":["HeaderConfig.tsx"],"names":["HeaderConfig","backButtonImage","backButtonInCustomView","direction","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerCenter","headerHideBackButton","headerHideShadow","headerLargeStyle","headerLargeTitle","headerLargeTitleHideShadow","headerLargeTitleStyle","headerLeft","headerRight","headerShown","headerStyle","headerTintColor","headerTitle","headerTitleStyle","headerTopInsetEnabled","headerTranslucent","route","screenOrientation","searchBar","statusBarAnimation","statusBarHidden","statusBarStyle","title","colors","tintColor","primary","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","fontFamily","backgroundColor","card","fontSize","blurEffect","color","fontWeight","undefined","name","text","Platform","OS"],"mappings":"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","sourcesContent":["import { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport {\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\nimport { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n};\n\nexport default function HeaderConfig({\n  backButtonImage,\n  backButtonInCustomView,\n  direction,\n  headerBackTitle,\n  headerBackTitleStyle = {},\n  headerBackTitleVisible = true,\n  headerCenter,\n  headerHideBackButton,\n  headerHideShadow,\n  headerLargeStyle = {},\n  headerLargeTitle,\n  headerLargeTitleHideShadow,\n  headerLargeTitleStyle = {},\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle = {},\n  headerTintColor,\n  headerTitle,\n  headerTitleStyle = {},\n  headerTopInsetEnabled = true,\n  headerTranslucent,\n  route,\n  screenOrientation,\n  searchBar,\n  statusBarAnimation,\n  statusBarHidden,\n  statusBarStyle,\n  title,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor = headerTintColor ?? colors.primary;\n\n  const [\n    backTitleFontFamily,\n    largeTitleFontFamily,\n    titleFontFamily,\n  ] = processFonts([\n    headerBackTitleStyle.fontFamily,\n    headerLargeTitleStyle.fontFamily,\n    headerTitleStyle.fontFamily,\n  ]);\n\n  return (\n    <ScreenStackHeaderConfig\n      backButtonInCustomView={backButtonInCustomView}\n      backgroundColor={\n        headerStyle.backgroundColor ? headerStyle.backgroundColor : colors.card\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n      backTitleFontFamily={backTitleFontFamily}\n      backTitleFontSize={headerBackTitleStyle.fontSize}\n      blurEffect={headerStyle.blurEffect}\n      color={tintColor}\n      direction={direction}\n      hidden={headerShown === false}\n      hideBackButton={headerHideBackButton}\n      hideShadow={headerHideShadow}\n      largeTitle={headerLargeTitle}\n      largeTitleBackgroundColor={headerLargeStyle.backgroundColor}\n      largeTitleColor={headerLargeTitleStyle.color}\n      largeTitleFontFamily={largeTitleFontFamily}\n      largeTitleFontSize={headerLargeTitleStyle.fontSize}\n      largeTitleFontWeight={headerLargeTitleStyle.fontWeight}\n      largeTitleHideShadow={headerLargeTitleHideShadow}\n      screenOrientation={screenOrientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      title={\n        headerTitle !== undefined\n          ? headerTitle\n          : title !== undefined\n          ? title\n          : route.name\n      }\n      titleColor={\n        headerTitleStyle.color !== undefined\n          ? headerTitleStyle.color\n          : headerTintColor !== undefined\n          ? headerTintColor\n          : colors.text\n      }\n      titleFontFamily={titleFontFamily}\n      titleFontSize={headerTitleStyle.fontSize}\n      titleFontWeight={headerTitleStyle.fontWeight}\n      topInsetEnabled={headerTopInsetEnabled}\n      translucent={headerTranslucent === true}>\n      {headerRight !== undefined ? (\n        <ScreenStackHeaderRightView>\n          {headerRight({ tintColor })}\n        </ScreenStackHeaderRightView>\n      ) : null}\n      {backButtonImage !== undefined ? (\n        <ScreenStackHeaderBackButtonImage\n          key=\"backImage\"\n          source={backButtonImage}\n        />\n      ) : null}\n      {headerLeft !== undefined ? (\n        <ScreenStackHeaderLeftView>\n          {headerLeft({ tintColor })}\n        </ScreenStackHeaderLeftView>\n      ) : null}\n      {headerCenter !== undefined ? (\n        <ScreenStackHeaderCenterView>\n          {headerCenter({ tintColor })}\n        </ScreenStackHeaderCenterView>\n      ) : null}\n      {Platform.OS === 'ios' && searchBar !== undefined ? (\n        <ScreenStackHeaderSearchBarView>\n          <SearchBar {...searchBar} />\n        </ScreenStackHeaderSearchBarView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n"]}